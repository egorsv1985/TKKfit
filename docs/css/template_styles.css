@charset "UTF-8";
.wrapper {
  min-height: 100%;
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.wrapper > main {
  flex: 1 1 auto;
}

.container {
  max-width: 1140px;
}

.fs-24 {
  font-size: 24px;
}

.fw-700 {
  font-weight: 700;
}

.fw-500 {
  font-weight: 500;
}

:root {
  --bs-blue: #0d6efd;
  --bs-indigo: #6610f2;
  --bs-purple: #6f42c1;
  --bs-pink: #d63384;
  --bs-red: #dc3545;
  --bs-orange: #fd7e14;
  --bs-yellow: #ffc107;
  --bs-green: #198754;
  --bs-teal: #20c997;
  --bs-cyan: #0dcaf0;
  --bs-black: #000;
  --bs-white: #fff;
  --bs-gray: #6c757d;
  --bs-gray-dark: #343a40;
  --bs-gray-100: #f8f9fa;
  --bs-gray-200: #e9ecef;
  --bs-gray-300: #dee2e6;
  --bs-gray-400: #ced4da;
  --bs-gray-500: #adb5bd;
  --bs-gray-600: #6c757d;
  --bs-gray-700: #495057;
  --bs-gray-800: #343a40;
  --bs-gray-900: #212529;
  --bs-primary: #e2484d;
  --bs-secondary: #6c757d;
  --bs-success: #198754;
  --bs-info: #0dcaf0;
  --bs-warning: #ffc107;
  --bs-danger: #dc3545;
  --bs-light: #f8f9fa;
  --bs-dark: #212529;
  --bs-primary-rgb: 226, 72, 77;
  --bs-secondary-rgb: 108, 117, 125;
  --bs-success-rgb: 25, 135, 84;
  --bs-info-rgb: 13, 202, 240;
  --bs-warning-rgb: 255, 193, 7;
  --bs-danger-rgb: 220, 53, 69;
  --bs-light-rgb: 248, 249, 250;
  --bs-dark-rgb: 2, 5, 14;
  --bs-white-rgb: 255, 255, 255;
  --bs-black-rgb: 0, 0, 0;
  --bs-body-color-rgb: 255, 255, 255;
  --bs-body-bg-rgb: 255, 255, 255;
  --bs-font-sans-serif: Roboto;
  --bs-font-monospace: SFMono-Regular, Menlo, Monaco, Consolas,
    "Liberation Mono", "Courier New", monospace;
  --bs-gradient: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.15),
    rgba(255, 255, 255, 0)
  );
  --bs-body-font-family: var(--bs-font-sans-serif);
  --bs-body-font-size: 1rem;
  --bs-body-font-weight: 400;
  --bs-body-line-height: 1.5;
  --bs-body-color: #fff;
  --bs-body-bg: #02050e;
  --bs-border-width: 1px;
  --bs-border-style: solid;
  --bs-border-color: #dee2e6;
  --bs-border-color-translucent: rgba(0, 0, 0, 0.175);
  --bs-border-radius: 0.375rem;
  --bs-border-radius-sm: 0.25rem;
  --bs-border-radius-lg: 0.5rem;
  --bs-border-radius-xl: 1rem;
  --bs-border-radius-2xl: 2rem;
  --bs-border-radius-pill: 50rem;
  --bs-link-color: #0d6efd;
  --bs-link-hover-color: #0a58ca;
  --bs-code-color: #d63384;
  --bs-highlight-bg: #fff3cd;
}

/* -----------------------------------------------------------------
                       @media
1-ый параметр $min-max принимает 3 аргумента min, max, min-max.
   min       - для mobil @media
   max       - для dectop @media
   min-max   - для промежутка между mobil-dectop @media
2-ой параметр $breakpoint_1 принимает 1-ин аргумент.
   ключ      - хранятся в созданной карте $grid_breakpoints(xxl, xl, lg, md , sm...)
3-ий параметр $breakpoint_2 принимает 1-ин аргумент, является не обязательным параметром.
   ключ      - хранятся в созданной карте $grid_breakpoints(xxl, xl, lg, md , sm...) нужен для 1-ого параметра 3 аргумента.
 Дополнение:
   map-has-key  - Нужен для проверки ключа в карте, если ключа указанного нет то условие не выполняется.
   map-get      - Нужен для использование ключей из карты.
Пример:
   @include media(max, xxl) { display: none;}
   @include media(min, xxl) { display: none;}
   @include media(min-max, mn-lg, mx-xxl) { display: none;}
Одиночные брекпоинты:
   @include media(max, 870px,) { display: none;}
   @include media(min, 870px,) { display: none;}
   @include media(min-max, 870px, 1000px) { display: none;}
--------------------------------------------------------------------*/
* {
  padding: 0px;
  margin: 0px;
  border: 0px;
}

*,
*:before,
*:after {
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  min-width: 320px;
}

body {
  -ms-text-size-adjust: 100%;
  -moz-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

input,
button,
textarea {
  font-family: "Roboto";
  font-size: inherit;
}

button {
  cursor: pointer;
  color: inherit;
  background-color: inherit;
}

a {
  color: inherit;
}

a:link,
a:visited {
  text-decoration: none;
}

a:hover {
  text-decoration: none;
}

ul li {
  list-style: none;
}

img {
  vertical-align: top;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: inherit;
  font-size: inherit;
  line-height: inherit;
}

.header .container {
  max-width: 1250px;
}
.header .header__wrapper {
  display: none;
}
.header__box::before {
  content: "";
  display: none;
  width: 106%;
  height: 187%;
  background: #e2484d;
  -webkit-clip-path: polygon(15% 0%, 100% 0%, 85% 100%, 0% 100%);
          clip-path: polygon(15% 0%, 100% 0%, 85% 100%, 0% 100%);
  position: absolute;
  left: -16px;
  right: 0;
  top: -24px;
  bottom: 0;
  z-index: -1;
}
.burger {
  height: 30px;
  border: none;
  cursor: pointer;
  position: relative;
  z-index: 15;
}
.burger__inner span, .burger__inner::before, .burger__inner::after {
  content: "";
  transition: all 0.3s ease 0s;
  right: 0px;
  position: absolute;
  height: 3px;
  background-color: #fff;
}
.burger__inner span {
  width: 21px;
}
.burger__inner::before {
  width: 30px;
  top: 0px;
}
.burger__inner::after {
  width: 13px;
  bottom: 0px;
}
.burger__inner span {
  top: calc(50% - 1px);
}
.open .burger__inner span {
  transform: scale(0);
}
.open .burger__inner::before {
  transform: rotate(-45deg);
  top: calc(50% - 1px);
}
.open .burger__inner::after {
  transform: rotate(45deg);
  bottom: calc(50% - 1px);
  width: 30px;
}

.social__link {
  display: block;
  width: 25px;
  height: 25px;
  border-radius: 50%;
}
.social__link--fb {
  background: url("../images/icons/facebook.svg") no-repeat center/cover;
}
.social__link--vk {
  background: url("../images/icons/vk.svg") no-repeat center/cover;
}
.social__link--ok {
  background: url("../images/icons/odnoklassniki.svg") no-repeat center/cover;
}
@supports (-webkit-appearance:none){
.social__link--fb{background:url("../images/icons/facebook.svg") no-repeat center/cover}
.social__link--vk{background:url("../images/icons/vk.svg") no-repeat center/cover}
.social__link--ok{background:url("../images/icons/odnoklassniki.svg") no-repeat center/cover}
}
@media only screen and (min-width: 991px){
  .header .header__wrapper {
    display: flex;
  }
  .header__box::before {
    display: block;
  }

@supports (-webkit-appearance:none){

}
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
